// Generated by Selenium IDE
const { Builder, By, Key, until, Browser } = require('selenium-webdriver')
const assert = require('assert')
const chrome = require('selenium-webdriver/chrome');
const firefox = require('selenium-webdriver/firefox');


describe('E2E Test', function () {
    this.timeout(50000)
    let driver
    let vars
    beforeEach(async function () {
        // create a detached driver
        // driver = await new Builder().forBrowser('chrome').setChromeOptions(options).build()
        let options = new firefox.Options()
        .setPreference('extensions.firebug.showChromeErrors', true);
        options.addArguments('--headless');// Run in headless mode
 
        driver = new Builder()
        .forBrowser('firefox')
        .setFirefoxOptions(options)
        .build();
        // set the driver to be detached from the browser
        driver.manage().setTimeouts({ implicit: 0 })
        vars = {}
    })
    afterEach(async function () {
        await driver.quit();
    })

    it('Should add a task', async function () {
        await driver.get("http://localhost:3000/")
        await driver.manage().window().setRect({ width: 1510, height: 871 })
        await driver.findElement(By.css("input")).click()
        await driver.findElement(By.css("input")).sendKeys("this is a task")
        await driver.findElement(By.css("button:nth-child(2)")).click()
        await driver.findElement(By.css("button:nth-child(3)")).click()
        await driver.findElement(By.css("button:nth-child(4)")).click()
    })
})
